###########
# BUILDER #
###########

# pull official base image
FROM python:slim-buster as builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apt -y update \
    && apt -y install postgresql postgresql-contrib gcc python3-dev

# RUN npm install -g sass
# RUN npm install node-sass@latest

# lint
#RUN pip install --upgrade pip
#RUN pip install flake8==3.9.2
#COPY . .
#RUN flake8 --ignore=E501,F401 ./app

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:slim-buster

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
# RUN groupadd app
RUN adduser app
RUN usermod -aG app app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
# RUN mkdir $APP_HOME/staticfiles
WORKDIR $APP_HOME

# install dependencies
RUN apt -y update && apt install -y libpq-dev netcat
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh /usr/src
RUN sed -i 's/\r$//g'  /usr/src/entrypoint.prod.sh
RUN chmod a+x  /usr/src/entrypoint.prod.sh

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
USER app

# run entrypoint.prod.sh
ENTRYPOINT ["/usr/src/entrypoint.prod.sh"]

